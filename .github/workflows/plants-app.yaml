name: Deploy plants app

on:
  push:
    branches: [master]
    paths:
      - "plants/**"
  workflow_dispatch:

defaults:
  run:
    working-directory: plants

env:
  PLANTS_APP_NAME: plants-app
  PLANTS_APP_PORT: 4040

jobs:
  build-push:
    name: Build and push the Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@master
      - name: Build image
        run: docker build -t "${{ secrets.DOCKER_USERNAME }}"/plantdex_"$PLANTS_APP_NAME":prod -f Dockerfile.prod ./
      - name: Log in
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: Push image
        run: docker push "${{ secrets.DOCKER_USERNAME }}"/plantdex_"$PLANTS_APP_NAME":prod
  deploy:
    name: Deploy the Docker image to DigitalOcean
    runs-on: ubuntu-latest
    needs: build-push
    steps:
      - name: Log in, add environment variables, and deploy image
        uses: appleboy/ssh-action@master
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          PLANTS_APP_NAME: ${{ env.PLANTS_APP_NAME }}
          PLANTS_APP_PORT: ${{ env.PLANTS_APP_PORT }}
          PLANTS_COLLECTION_NAME: ${{ secrets.PLANTS_COLLECTION_NAME }}
          PLANTS_PRODUCTION_DATABASE_NAME: ${{ secrets.PLANTS_PRODUCTION_DATABASE_NAME }}
          PLANTS_PRODUCTION_MONGODB_URI: ${{ secrets.PLANTS_PRODUCTION_MONGODB_URI }}
        with:
          host: ${{ secrets.DIGITALOCEAN_PLANTDEX_HOST }}
          username: ${{ secrets.DIGITALOCEAN_USERNAME }}
          key: ${{ secrets.DIGITALOCEAN_KEY }}
          envs: DOCKER_USERNAME, PLANTS_APP_NAME, PLANTS_APP_PORT, PLANTS_COLLECTION_NAME, PLANTS_PRODUCTION_DATABASE_NAME, PLANTS_PRODUCTION_MONGODB_URI
          script: |
            rm .plants-env
            echo PLANTS_APP_PORT="$PLANTS_APP_PORT" >> .plants-env
            echo PLANTS_COLLECTION_NAME="$PLANTS_COLLECTION_NAME" >> .plants-env
            echo PLANTS_PRODUCTION_DATABASE_NAME="$PLANTS_PRODUCTION_DATABASE_NAME" >> .plants-env
            echo PLANTS_PRODUCTION_MONGODB_URI="$PLANTS_PRODUCTION_MONGODB_URI" >> .plants-env
            docker pull "$DOCKER_USERNAME"/plantdex_"$PLANTS_APP_NAME":prod
            docker rm -f "$PLANTS_APP_NAME"
            docker run -d -p "$PLANTS_APP_PORT":"$PLANTS_APP_PORT" --network plantdex --restart unless-stopped --env-file .plants-env --name "$PLANTS_APP_NAME" "$DOCKER_USERNAME"/plantdex_"$PLANTS_APP_NAME":prod
            docker system prune -f --volumes
